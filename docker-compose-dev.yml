version: '3.7'
services:
  ##############
  ## POSTGRES ##
  postgres_db:
    build:
      context: ./postgres
      dockerfile: Dockerfile.dev
    image: postgres
    shm_size: 1gb 
    networks:
      - database
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=demo
    restart: always
    volumes:
      - ./server/database/data/dev:/var/lib/postgresql/data
    ports: 
      - '5433:5432'
    container_name: postgres_db
  ##############
  ## SERVER ##
  server:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    networks:
      - webapp
      - database
    ports:
      - 5500:5500
      # for debugging
      - 9229:9229
    environment:
      - SECRET="¯\_(ツ)_/¯"
      - API_KEY=1db2c2d4e7f61gb2cjd4e5f6
    volumes:
      - ./server/node_modules:/app/node_modules
      - ./server/src:/app/src
    depends_on:
      - postgres_db 
    restart: always
    command: ['./wait-for-it.sh', postgres_db:5432', '--', 'nodemon']
    container_name: server
  #############
  ## CLIENT ##
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    env_file:
      - ./client/.env
    volumes:
      - ./client/node_modules:/app/node_modules
      - ./client/src:/app/src
      - ./client/public:/app/public
    networks:
      - webapp
    ports:
      - 3000:3000
    command: npm start
    stdin_open: true
    restart: always
    container_name: client
networks:
  webapp:
    driver: bridge
  database:
    driver: bridge
